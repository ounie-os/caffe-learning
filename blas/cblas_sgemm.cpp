#include <vector>  
#include <iostream>  
#include <cblas.h>

using namespace std;

/*
参数 transA和transB ：表示矩阵A，B是否进行转置。候选参数 CblasTrans 和CblasNoTrans.

参数M：表示 A或C的行数。如果A转置，则表示转置后的行数

参数N：表示 B或C的列数。如果B转置，则表示转置后的列数。

参数K：表示 A的列数或B的行数（A的列数=B的行数）。如果A转置，则表示转置后的列数。

参数LDA：填A的行数

参数LDB：填B的行数

参数LDC：始终=N
*/

{0.69646918559786164, 0.28613933495037946, 0.48093190148436094, 0.39211751819415053, 0.3431780161508694, 0.72904970738404162, 0.43857224467962441, 0.059677896609568348, 0.39804425533043142, 0.7379954057320357, 0.18249173045349998, 0.17545175614749253, 0.53155137384183837, 0.53182758709686606, 0.63440095855132106, 0.84943179407778957, 0.72445532486063524, 0.61102351067758287, 0.72244338257022156, 0.32295891385317821, 0.3617886556223141, 0.22826323087895561, 0.29371404638882936, 0.63097612385448776, 0.092104939945075182, 0.43370117267952824, 0.43086276332964379, 0.49368509765030621, 0.42635130696280821, 0.89338916311713479, 0.94416001820387963, 0.50183667588433656, 0.62395295179211119, 0.11561839507929572, 0.86630915788336593, 0.2504553653965067, 0.48303426426270435, 0.98555978561070501, 0.51948511925980934, 0.61289452576296766, 0.12062866599032374, 0.82634080050683323, 0.60306012841092738, 0.54506800646646492, 0.41702221102470161, 0.68130076579279664, 0.87545684179517491, 0.51042233747801113, 0.66931378296227229, 0.58593655256221289, 0.62490350209559986, 0.67468905098782483, 0.84234243762025729, 0.083194988332438768, 0.7636828414433382, 0.24366637453687401, 0.095712516612387111, 0.88532682627513959, 0.62724897205126873, 0.72341635818995476, 0.016129206695016829, 0.5944318794450425, 0.5567851923942887, 0.15895964414472274, 0.31876642638187636, 0.69197029553181966, 0.55438324971777209, 0.3889505741231446, 0.92513248961398609, 0.84166999691271627, 0.35739756668317624, 0.043591463799040553, 0.70495883045136221, 0.99535848203401744, 0.35591486571745956, 0.76254781378543379, 0.59317691656222116, 0.69170179870017712, 0.15112745234808023, 0.39887629272615654, 0.24085589772362448, 0.34345601404832493}
  
int main() {  
    const int M=2;  
    const int N=1;  
    const int K=2;  
    const float alpha=1;  
    const float beta=0;
	
	const float A[M*K]={1,2,3,4};  
    const float B[K*N]={5,6};  
    float C[M*N];
	const int ldc=N; //C的列数	
	
    const int lda=K; //A的列数 
    const int ldb=N; //B的列数 
    cblas_sgemm(CblasRowMajor, CblasNoTrans, CblasNoTrans, M, N, K, alpha, A, lda, B, ldb, beta, C, ldc);  
  
    for(int i=0;i<M;i++)  
    {  
       for(int j=0;j<N;j++)  
       {  
           cout<<C[i*N+j]<<" ";  
       }  
       cout<<endl;  
    }
	cout << endl;
	
	const int lda1=M; //A的行数，转置之后的列数
    const int ldb1=K; //B的行数，转置之后的列数 
    cblas_sgemm(CblasRowMajor, CblasTrans, CblasTrans, M, N, K, alpha, A, lda1, B, ldb1, beta, C, ldc);  
  
    for(int i=0;i<M;i++)  
    {  
       for(int j=0;j<N;j++)  
       {  
           cout<<C[i*N+j]<<" ";  
       }  
       cout<<endl;  
    } 
}